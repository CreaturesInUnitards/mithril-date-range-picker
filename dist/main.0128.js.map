{"version":3,"sources":["webpack:///./lib/date-range-picker.js","webpack:///./src/index.js"],"names":["nextMonth","date","newDate","Date","getMonth","setFullYear","getFullYear","setMonth","monthsIndex","0","1","2","3","4","5","6","7","8","9","10","11","days","date_range_picker_month","[object Object]","dom","state","attrs","month","id","thresholdUp","initialDate","thresholdDown","direction","classList","add","parentElement","Promise","resolve","setTimeout","remove","year","d","setHours","push","setDate","getDate","getDaysInMonth","startDay","getDay","empties","Array","fill","view","firstDate","secondDate","mithril_default","map","date_range_picker_date","class","getTime","setDateClassName","first","second","lib_date_range_picker","document","removeEventListener","close","data","arrivalProp","departureProp","show","stream_default","toggle","e","activeElement","contains","a","redraw","addEventListener","monthOne","monthTwo","months","key","val","movement","placeholder","onclick","stopPropagation","onfocus","onbeforeremove","prevMonth","mon","trip","location","arrivalDate","departureDate","src_demo","vnode","JSON","stringify","mount","body"],"mappings":"gJAgBA,SAAAA,EAAAC,GACA,MAAAC,EAAA,IAAAC,KAQA,OAPAF,EAAAG,WAAA,IACAF,EAAAG,YAAAJ,EAAAK,eACAJ,EAAAK,SAAAN,EAAAG,WAAA,KAEAF,EAAAK,SAAA,GACAL,EAAAG,YAAAJ,EAAAK,cAAA,IAEAJ,EAGA,MAAAM,GACAC,EAAA,UACAC,EAAA,WACAC,EAAA,QACAC,EAAA,QACAC,EAAA,MACAC,EAAA,OACAC,EAAA,OACAC,EAAA,SACAC,EAAA,YACAC,EAAA,UACAC,GAAA,WACAC,GAAA,YAGAC,GAAA,iCAeA,MAAAC,GACAC,gBAAAC,IAAoBA,EAAAC,QAAAC,OAAAC,MAAqBA,EAAAC,QACzC,MAAAC,EAAA,IAAA1B,KAAAsB,EAAAK,YAAAvB,SAAAkB,EAAAK,YAAA1B,WAAA,IACA2B,EAAA,IAAA5B,KAAAsB,EAAAK,YAAAvB,SAAAkB,EAAAK,YAAA1B,WAAA,IACA4B,EAAAL,IAAAF,EAAAK,YAAA,eAEA,GAAAH,IAAAE,GAAA,SAAAG,GAAAL,IAAAI,GAAA,UAAAC,EAGA,OAFAR,EAAAS,UAAAC,IAAA,OAAAF,GACAR,EAAAW,cAAAF,UAAAC,IAAA,MAAAF,GACA,IAAAI,QAAAC,IACAC,WAAA,KACAd,EAAAW,cAAAF,UAAAM,OAAA,MAAAP,GACAK,KACiB,QAIjBd,QAAAE,MAAYA,EAAAC,OAAAC,MAAgBA,EAAAC,QAC5BH,EAAAK,YAAAH,IACAF,EAAAJ,KAhCA,SAAAM,EAAAa,GAGA,IAFA,IAAAvC,EAAA,IAAAE,KAAAqC,EAAAb,EAAA,GACAN,KACApB,EAAAG,aAAAuB,GAAA,CACA,MAAAc,EAAA,IAAAtC,KAAAF,GACAwC,EAAAC,SAAA,UACArB,EAAAsB,KAAAF,GACAxC,EAAA2C,QAAA3C,EAAA4C,UAAA,GAEA,OAAAxB,EAuBAyB,CAAAnB,IAAAvB,WAAAuB,IAAArB,eACAmB,EAAAsB,SAAAtB,EAAAJ,KAAA,GAAA2B,SACAvB,EAAAwB,QAAA,IAAAC,MAAAzB,EAAAsB,UAAAI,KAAA,GACA1B,EAAAG,MAEAwB,KAAA,EAAA3B,MAAUA,EAAAC,OAAAC,MAAgBA,EAAAC,KAAAyB,YAAAC,iBAC1BC,oBAAiC3B,KACjC2B,IAAA,KAAA/C,EAAAmB,IAAAvB,aACAmD,IAAA,eACAA,IAAA,QAAAlC,EAAAmC,IAAAf,GACAc,IAAA,OAAAd,KAEAc,IAAA,UACA9B,EAAAwB,QAAAO,IAAA,IACAD,IAAA,gBAEA9B,EAAAJ,KAAAmC,IAAAf,GACAc,IAAAE,GACAxD,KAAAwC,EACAY,YACAC,uBAyBAG,GACAL,KAAA,EAAU1B,OAAAzB,KAASA,EAAAoD,YAAAC,iBACnBC,IAAA,SACAG,MAnBA,EAAAzD,EAAAoD,EAAAC,KACA,GAAArD,GAAAoD,MAAAC,KACA,GAAAD,IAAAM,WAAA1D,EAAA0D,YAAAL,IACA,0BAEK,GAAArD,GAAAoD,KAAAC,IAAA,CACL,GAAAD,IAAAM,WAAA1D,EAAA0D,UACA,mBACS,GAAAL,IAAAK,WAAA1D,EAAA0D,UACT,oBACS,GAAA1D,EAAAqD,KAAArD,EAAAoD,IACT,qBAQAO,CAAA3D,EAAAoD,EAAAC,GACA/B,UACA,GAAA8B,IAEiB,GAAAA,MAAAC,IAAA,CACjBA,EAAArD,GACA,MAAA4D,EAAAR,IACAS,EAAAR,IAEAQ,EAAAH,UAAAE,EAAAF,YACAN,EAAAS,GACAR,EAAAO,SAEiBR,KAAAC,MACjBA,EAAA,MACAD,EAAApD,SAZAoD,EAAApD,MAgBAsD,IAAA,UACAA,IAAA,OACAA,IAAA,UAAAtD,EAAA4C,cAKAL,GACAY,KAAA,EAAU1B,OAAAzB,KAASA,MACnBsD,IAAA,mBACAA,IAAA,wBACAhC,UACA,MAAAkB,EAAA,IAAAtC,KAAAF,KACAwC,EAAApC,YAAAJ,IAAAK,cAAA,GACAL,EAAAwC,KAEa,QACbc,IAAA,QAAAtD,IAAAK,eACAiD,IAAA,oBACAhC,UACA,MAAAkB,EAAA,IAAAtC,KAAAF,KACAwC,EAAApC,YAAAJ,IAAAK,cAAA,GACAL,EAAAwC,KAEa,WAKb,IAAAsB,GACAxC,UAAAE,MAAcA,IACduC,SAAAC,oBAAA,QAAAxC,EAAAyC,QAEA3C,QAAAE,MAAYA,EAAAC,OAAAyC,KAAgBA,EAAAC,cAAAC,mBAC5B5C,EAAA6C,KAAAC,KAAA,GAEA9C,EAAA+C,OAAA,CAAAC,IACAT,SAAAU,cAAAzC,UAAA0C,SAAA,sBAAAlD,EAAA6C,SACA7C,EAAA6C,MAAA7C,EAAA6C,QACAf,EAAAqB,EAAAC,YAIApD,EAAAyC,MAAA,MACAzC,EAAA6C,MAAA,GACAf,EAAAqB,EAAAC,WAGAb,SAAAc,iBAAA,QAAArD,EAAAyC,OAEA,MAAAjE,EAAA,IAAAE,KACAsB,EAAAsD,SAAAR,IAAAtE,GACAwB,EAAAuD,SAAAvD,EAAAsD,SAAAvB,IAAA,IACAxD,EAAAyB,EAAAsD,aAGAtD,EAAAwD,OAAAxD,EAAAuD,SAAAxB,IAAA,MAGA7B,MAAAF,EAAAsD,SACAnD,GAAA,IACAsD,IAAAzD,EAAAsD,WAAApB,YAGAhC,MAAAF,EAAAuD,SACApD,GAAA,IACAsD,IAAAzD,EAAAuD,WAAArB,aAKAlC,EAAA4B,UAAAkB,MACA9C,EAAA6B,WAAAiB,MAEA9C,EAAA6B,WAAAE,IAAA2B,IACAA,GACAhB,EAAAC,GAAA3C,EAAA4B,YACAc,EAAAE,GAAA5C,EAAA6B,eAEAa,EAAAC,GAAA,KACAD,EAAAE,GAAA,SAIAjB,KAAA,EAAU3B,OAAAsD,SAASA,EAAAC,WAAAC,SAAAX,OAAAE,SAAAY,WAAA/B,YAAAC,cAA4E5B,OAAA2D,YAAUA,MACzG9B,IAAA,eACA+B,QAAAb,KAAAc,oBAEAhC,IAAA,0BACAG,MAAAY,IAAA,WACAe,cACAC,QAAAd,EACAgB,QAAAhB,IAGAjB,IAAA,qBACAkC,eAAA,EAAAjE,IAAoCA,MACpCA,EAAAS,UAAAC,IAAA,YACA,IAAAE,QAAAC,IACAC,WAAAD,EAAA,UAIAkB,IAAA,aACAA,IAAA,0CACAhC,UACAwD,EAtPA,SAAA9E,GACA,MAAAC,EAAA,IAAAC,KAQA,OAPAF,EAAAG,WAAA,GACAF,EAAAG,YAAAJ,EAAAK,eACAJ,EAAAK,SAAAN,EAAAG,WAAA,KAEAF,EAAAK,SAAA,IACAL,EAAAG,YAAAJ,EAAAK,cAAA,IAEAJ,EA6OAwF,CAAAX,QAEyB,QAEzBxB,IAAA,sCACAhC,UACAwD,EAAA/E,EAAA+E,QAEyB,QAEzBxB,IAAAf,GACAvC,KAAA8E,IAGAxB,IAAA,oBAAA0B,IAAAzB,IAAAmC,GACApC,IAAAjC,GACAK,MAAAgE,EAAAhE,MACAC,GAAA+D,EAAA/D,GACAsD,IAAAS,EAAAT,IACA7B,YACAC,sBC1QMsC,GACFC,SAAU,OACVC,YAAa,KACbC,cAAe,MAGbC,GACF5C,KADS,SACJ6C,GACF,OAAO1C,IAAE,oBACLA,IAAEQ,GACEsB,YAAa,oBACblB,KAAMyB,EACNxB,YAAa,cACbC,cAAe,kBAEnBd,IAAE,QAAS2C,KAAKC,UAAUP,QAKrCrC,EAAAqB,EAAEwB,MAAMpC,SAASqC,KAAML","file":"main.0128.js","sourcesContent":["import m from 'mithril'\nimport stream from 'mithril/stream'\nimport './date-range-picker.css'\n\nfunction prevMonth(date) {\n    const newDate = new Date()\n    if (date.getMonth() > 0) {\n        newDate.setFullYear(date.getFullYear())\n        newDate.setMonth(date.getMonth() - 1)\n    } else {\n        newDate.setMonth(11)\n        newDate.setFullYear(date.getFullYear() - 1)\n    }\n    return newDate\n}\n\nfunction nextMonth(date) {\n    const newDate = new Date()\n    if (date.getMonth() < 11) {\n        newDate.setFullYear(date.getFullYear())\n        newDate.setMonth(date.getMonth() + 1)\n    } else {\n        newDate.setMonth(0)\n        newDate.setFullYear(date.getFullYear() + 1)\n    }\n    return newDate\n}\n\nconst monthsIndex = {\n    0: 'January',\n    1: 'February',\n    2: 'March',\n    3: 'April',\n    4: 'May',\n    5: 'June',\n    6: 'July',\n    7: 'August',\n    8: 'September',\n    9: 'October',\n    10: 'November',\n    11: 'December'\n}\n\nconst days = ['Su', 'M', 'Tu', 'W', 'Th', 'F', 'Sa']\n\nfunction getDaysInMonth(month, year) {\n    var date = new Date(year, month, 1);\n    var days = [];\n    while (date.getMonth() === month) {\n        const d = new Date(date)\n        d.setHours(12, 0, 0, 0)\n        days.push(d);\n        date.setDate(date.getDate() + 1);\n    }\n    return days;\n}\n\n\nconst month = {\n    onbeforeremove({ dom, state, attrs: { month, id } }) {\n        const thresholdUp = new Date(state.initialDate.setMonth(state.initialDate.getMonth() + 6))\n        const thresholdDown = new Date(state.initialDate.setMonth(state.initialDate.getMonth() - 6))\n        const direction = month() < state.initialDate ? 'right' : 'left'\n\n        if ((month() < thresholdUp && direction === 'left') || (month() > thresholdDown && direction === 'right')){\n            dom.classList.add('out-' + direction)\n            dom.parentElement.classList.add('in-' + direction)\n            return new Promise(resolve => {\n                setTimeout(() => {\n                    dom.parentElement.classList.remove('in-' + direction)\n                    resolve()\n                }, 300)\n            })\n        }\n    },\n    oninit({ state, attrs: { month, id } }) {\n        state.initialDate = month()\n        state.days = getDaysInMonth(month().getMonth(), month().getFullYear())\n        state.startDay = state.days[0].getDay()\n        state.empties = new Array(state.startDay).fill(0)\n        state.id = id\n    },\n    view({ state, attrs: { month, id, firstDate, secondDate } }) {\n        return m(`.month.month-${id}`, [\n            m('h5', monthsIndex[month().getMonth()]),\n            m('.month-grid', [\n                m('.days', days.map(d => {\n                    return m('.day', d)\n                })),\n                m('.dates', [\n                    state.empties.map(() => {\n                        return m('.empty-date')\n                    }),\n                    state.days.map(d => {\n                        return m(date, {\n                            date: d,\n                            firstDate,\n                            secondDate\n                        })\n                    })\n                ])\n            ])\n        ])\n    }\n}\n\nconst setDateClassName = (date, firstDate, secondDate) => {\n    if (date && firstDate() && !secondDate()) {\n        if (firstDate().getTime() == date.getTime() && !secondDate()) {\n            return 'initial-date'\n        }\n    } else if (date && firstDate() && secondDate()) {\n        if (firstDate().getTime() == date.getTime()) {\n            return 'first-date'\n        } else if (secondDate().getTime() == date.getTime()) {\n            return 'second-date'\n        } else if (date < secondDate() && date > firstDate()) {\n            return 'in-between'\n        }\n    }\n}\n\nconst date = {\n    view({ attrs: { date, firstDate, secondDate } }) {\n        return m('.date', {\n            class: setDateClassName(date, firstDate, secondDate),\n            onclick() {\n                if (!firstDate()) {\n                    firstDate(date)\n                } else if (firstDate() && !secondDate()) {\n                    secondDate(date)\n                    const first = firstDate()\n                    const second = secondDate()\n\n                    if (second.getTime() < first.getTime()) {\n                        firstDate(second)\n                        secondDate(first)\n                    }\n                } else if (firstDate() && secondDate()) {\n                    secondDate(null)\n                    firstDate(date)\n                }\n            }\n        }, [\n                m('.shape'),\n                m('.bg'),\n                m('.number', date.getDate())\n            ])\n    }\n}\n\nconst year = {\n    view({ attrs: { date } }) {\n        return m('.year-container', [\n            m('button.year-previous', {\n                onclick() {\n                    const d = new Date(date())\n                    d.setFullYear(date().getFullYear() - 1)\n                    date(d)\n                }\n            }, 'Prev'),\n            m('.year', date().getFullYear()),\n            m('button.year-next', {\n                onclick() {\n                    const d = new Date(date())\n                    d.setFullYear(date().getFullYear() + 1)\n                    date(d)\n                }\n            }, 'Next'),\n        ])\n    }\n}\n\nexport default {\n    onremove({ state }) {\n        document.removeEventListener('click', state.close)\n    },\n    oninit({ state, attrs: { data, arrivalProp, departureProp } }) {\n        state.show = stream(false)\n\n        state.toggle = (e) => {\n            if (document.activeElement.classList.contains('date-range-input') && !state.show()) {\n                state.show(!state.show())\n                m.redraw()\n            }\n        }\n\n        state.close = () => {\n            state.show(false)\n            m.redraw()\n        }\n\n        document.addEventListener('click', state.close)\n\n        const date = new Date()\n        state.monthOne = stream(date)\n        state.monthTwo = state.monthOne.map(() => {\n            return nextMonth(state.monthOne())\n        })\n\n        state.months = state.monthTwo.map(() => {\n            return [\n                {\n                    month: state.monthOne,\n                    id: '1',\n                    key: state.monthOne().getTime(),\n                },\n                {\n                    month: state.monthTwo,\n                    id: '2',\n                    key: state.monthTwo().getTime(),\n                }\n            ]\n        })\n\n        state.firstDate = stream()\n        state.secondDate = stream()\n\n        state.secondDate.map(val => {\n            if (val) {\n                data[arrivalProp] = state.firstDate()\n                data[departureProp] = state.secondDate()\n            } else {\n                data[arrivalProp] = null\n                data[departureProp] = null\n            }\n        })\n    },\n    view({ state: { monthOne, monthTwo, months, show, toggle, movement, firstDate, secondDate }, attrs: { placeholder } }) {\n        return m('.date-range', {\n            onclick: e => e.stopPropagation()\n        }, [\n                m('input.date-range-input', {\n                    class: show() ? 'focus' : '',\n                    placeholder,\n                    onclick: toggle,\n                    onfocus: toggle\n                }),\n                //show() &&\n                m('.calendar-display', {\n                    onbeforeremove({ dom }) {\n                        dom.classList.add(\"fade-out\")\n                        return new Promise(resolve => {\n                            setTimeout(resolve, 200)\n                        })\n                    }\n                }, [\n                        m('.triangle'),\n                        m('button.previous-month.month-navigation', {\n                            onclick() {\n                                monthOne(prevMonth(monthOne()))\n                            }\n                        }, 'Prev'),\n\n                        m('button.next-month.month-navigation', {\n                            onclick() {\n                                monthOne(nextMonth(monthOne()))\n                            }\n                        }, 'Next'),\n\n                        m(year, {\n                            date: monthOne\n                        }),\n\n                        m('.months-container', months().map(mon => {\n                            return m(month, {\n                                month: mon.month,\n                                id: mon.id,\n                                key: mon.key,\n                                firstDate,\n                                secondDate\n                            })\n                        }))\n                    ])\n            ])\n    }\n}","import m from 'mithril'\nimport './demo.css'\nimport dateRange from '../lib/date-range-picker'\n\nconst trip = {\n    location: 'Hull',\n    arrivalDate: null,\n    departureDate: null\n}\n\nconst demo = {\n    view(vnode) {\n       return m('.page-date-range', [\n           m(dateRange, {\n               placeholder: 'Arrival/Departure',\n               data: trip,\n               arrivalProp: 'arrivalDate',\n               departureProp: 'departureDate'\n           }),\n           m('.json', JSON.stringify(trip))\n       ])\n    }\n}\n\nm.mount(document.body, demo)\n\n"],"sourceRoot":""}