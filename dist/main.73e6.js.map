{"version":3,"sources":["webpack:///./lib/date-range-picker.js","webpack:///./src/index.js"],"names":["nextMonth","date","newDate","Date","getMonth","setFullYear","getFullYear","setMonth","date_range_picker_months","0","1","2","3","4","5","6","7","8","9","10","11","days","date_range_picker_month","onbeforeremove","dom","state","attrs","month","id","Promise","resolve","setTimeout","[object Object]","initialDate","year","push","setDate","getDate","getDaysInMonth","startDay","getDay","empties","Array","fill","view","arrival","departure","mithril_default","map","d","date_range_picker_date","class","a","dep","setHours","createDateClass","lib_date_range_picker","document","removeEventListener","close","data","arrivalProp","departureProp","show","stream_default","toggle","e","activeElement","classList","contains","redraw","addEventListener","monthOne","monthTwo","months","key","getTime","setMovement","dir","movement","undefined","placeholder","onclick","stopPropagation","onfocus","add","prevMonth","mon","trip","location","arrivalDate","departureDate","src_demo","vnode","JSON","stringify","mount","body"],"mappings":"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","file":"main.73e6.js","sourcesContent":["import m from 'mithril'\nimport stream from 'mithril/stream'\nimport './date-range-picker.css'\n\nfunction prevMonth(date){\n    const newDate = new Date()\n    if (date.getMonth() > 0){\n        newDate.setFullYear(date.getFullYear())\n        newDate.setMonth(date.getMonth() - 1)\n    } else {\n        newDate.setMonth(11)\n        newDate.setFullYear(date.getFullYear() - 1)\n    }\n    return newDate\n}\n\nfunction nextMonth(date){\n    const newDate = new Date()\n    if (date.getMonth() < 11){\n        newDate.setFullYear(date.getFullYear())\n        newDate.setMonth(date.getMonth() + 1)\n    } else {\n        newDate.setMonth(0)\n        newDate.setFullYear(date.getFullYear() + 1)\n    }\n    return newDate\n}\n\nconst months = {\n    0: 'January',\n    1: 'February',\n    2: 'March',\n    3: 'April',\n    4: 'May',\n    5: 'June',\n    6: 'July',\n    7: 'August',\n    8: 'September',\n    9: 'October',\n    10: 'November',\n    11: 'December'\n}\n\nconst days = ['Su', 'M', 'Tu', 'W', 'Th', 'F', 'Sa']\n\nfunction getDaysInMonth(month, year) {\n    var date = new Date(year, month, 1);\n    var days = [];\n    while (date.getMonth() === month) {\n       days.push(new Date(date));\n       date.setDate(date.getDate() + 1);\n    }\n    return days;\n}\n\n\nconst month = {\n    onbeforeremove({dom, state, attrs: {month, id}}){\n        return new Promise(resolve => {\n            setTimeout(resolve, 300)\n        })\n    },\n    oninit({state, attrs: {month, id}}){\n        state.initialDate = month()\n        state.days = getDaysInMonth(month().getMonth(), month().getFullYear())\n        state.startDay = state.days[0].getDay()\n        state.empties = new Array(state.startDay).fill(0)\n        state.id = id\n    },\n    view ({state, attrs: {month, id, arrival, departure}}) {\n        return m(`.month.month-${id}`, [\n            m('h5', months[month().getMonth()]),\n            m('.month-grid', [\n                m('.days', days.map(d => {\n                    return m('.day', d)\n                })),\n                m('.dates', [\n                    state.empties.map(() => {\n                        return m('.empty-date')\n                    }),\n                    state.days.map(d => {\n                        return m(date, {\n                            date: d,\n                            arrival,\n                            departure\n                        })\n                    })\n                ])\n            ])\n        ])\n    }\n}\n\nconst createDateClass = (d, a, dep) => {\n    const date = d.setHours(0,0,0,0)\n    const arrival = a() ? a().setHours(0,0,0,0) : ''\n    const departure = dep() ? dep().setHours(0,0,0,0) : ''\n    if (date == arrival){\n        return 'arrival'\n    } else if (date == departure){\n        return 'departure'\n    }\n    if (date > arrival && date < departure){\n        return 'selected'\n    }\n}\n\nconst date = {\n    view({attrs: {date, arrival, departure}}){\n        return m('.date', {\n            class: createDateClass(date, arrival, departure),\n            onclick(){\n                if (!arrival()){\n                    arrival(date)\n                } else if (arrival() && !departure()){\n                    departure(date)\n                } else if (arrival() && departure()){\n                    arrival(date)\n                    departure(null)\n                }\n            }\n        }, date.getDate())\n    }\n}\n\nexport default {\n    onremove({state}){\n        document.removeEventListener('click', state.close)\n    },\n    oninit({state, attrs: {data, arrivalProp, departureProp}}){\n        state.show = stream(false)\n\n        state.toggle = (e) => {\n            if (document.activeElement.classList.contains('date-range-input') && !state.show()){\n                state.show(!state.show())\n                m.redraw()\n            }\n        }\n\n        state.close = () => {\n            state.show(false)\n            m.redraw()\n        }\n\n        document.addEventListener('click', state.close)\n\n        const date = new Date()\n        date.setDate(1)\n        date.setHours(0,0,0,0)\n\n        state.monthOne = stream(date)\n        state.monthTwo = state.monthOne.map(() => {\n            return nextMonth(state.monthOne())\n        })\n\n        state.months = state.monthTwo.map(() => {\n            return [\n                {\n                    month: state.monthOne,\n                    id: '1',\n                    key: state.monthOne().getTime(),\n                },\n                {\n                    month: state.monthTwo,\n                    id: '2',\n                    key: state.monthTwo().getTime(),\n                }\n            ]\n        })\n\n        state.setMovement = (dir) => {\n            state.movement = dir\n            setTimeout(() => {\n                state.movement = ''\n                m.redraw()\n            }, 300)\n        }\n\n        state.arrival = date => {\n            if (date !== undefined){\n                data[arrivalProp] = date\n            } else {\n                return data[arrivalProp]\n            }\n        }\n\n        state.departure = date => {\n            if (date !== undefined){\n                data[departureProp] = date\n            } else {\n                return data[departureProp]\n            }\n        }\n    },\n    view ({state: {monthOne, monthTwo, months, show, toggle, movement, setMovement, arrival, departure}, attrs: {placeholder}}) {\n        return m('.date-range', {\n            onclick: e => e.stopPropagation() \n        }, [\n            m('input.date-range-input', {\n                class: show() ? 'focus' : '',\n                placeholder,\n                onclick: toggle,\n                onfocus: toggle\n            }),\n            //show() &&\n            m('.calendar-display', {\n                onbeforeremove({dom}){\n                    dom.classList.add(\"fade-out\")\n                    return new Promise(resolve => {\n                        setTimeout(resolve, 200)\n                    })\n                }\n            }, [\n                m('.triangle'),\n                m('button.previous-month.month-navigation', {\n                    onclick(){\n                        monthOne(prevMonth(monthOne()))\n                        setMovement('right')\n                    }\n                }, 'Prev'),\n\n                m('button.next-month.month-navigation', {\n                    onclick(){\n                        monthOne(nextMonth(monthOne()))\n                        setMovement('left')\n                    }\n                }, 'Next'),\n\n                m('.year', monthOne().getFullYear()),\n                m('.months-container', {\n                    class: movement\n                }, months().map(mon => {\n                    return m(month, {\n                        month: mon.month,\n                        id: mon.id, \n                        key: mon.key,\n                        arrival,\n                        departure\n                    })\n                })),\n \n\n            ])\n        ])\n    }\n}","import m from 'mithril'\nimport './demo.css'\nimport dateRange from '../lib/date-range-picker'\n\nconst trip = {\n    location: 'Hull',\n    arrivalDate: null,\n    departureDate: null\n}\n\nconst demo = {\n    view(vnode) {\n       return m('.page-date-range', [\n           m(dateRange, {\n               placeholder: 'Arrival/Departure',\n               data: trip,\n               arrivalProp: 'arrivalDate',\n               departureProp: 'departureDate'\n           }),\n           m('.json', JSON.stringify(trip))\n       ])\n    }\n}\n\nm.mount(document.body, demo)\n\n"],"sourceRoot":""}