{"version":3,"sources":["webpack:///./lib/date-range-picker.js","webpack:///./src/index.js"],"names":["nextMonth","date","newDate","Date","getMonth","setFullYear","getFullYear","setMonth","monthsIndex","0","1","2","3","4","5","6","7","8","9","10","11","days","date_range_picker_month","[object Object]","dom","state","attrs","month","id","o","n","thresholdUp","thresholdDown","direction","isYearChange","initialDate","classList","add","parentElement","Promise","resolve","setTimeout","remove","year","d","setHours","push","setDate","getDate","getDaysInMonth","startDay","getDay","empties","Array","fill","view","firstDate","secondDate","mithril_default","map","date_range_picker_date","class","getTime","setDateClassName","first","second","lib_date_range_picker","document","removeEventListener","close","data","arrivalProp","departureProp","show","stream_default","toggle","e","activeElement","contains","a","redraw","addEventListener","monthOne","monthTwo","months","key","val","movement","placeholder","onclick","stopPropagation","onfocus","onbeforeremove","prevMonth","mon","trip","location","arrivalDate","departureDate","src_demo","vnode","JSON","stringify","mount","body"],"mappings":"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","file":"main.4560.js","sourcesContent":["import m from 'mithril'\nimport stream from 'mithril/stream'\nimport './date-range-picker.css'\n\nfunction prevMonth(date) {\n    const newDate = new Date()\n    if (date.getMonth() > 0) {\n        newDate.setFullYear(date.getFullYear())\n        newDate.setMonth(date.getMonth() - 1)\n    } else {\n        newDate.setMonth(11)\n        newDate.setFullYear(date.getFullYear() - 1)\n    }\n    return newDate\n}\n\nfunction nextMonth(date) {\n    const newDate = new Date()\n    if (date.getMonth() < 11) {\n        newDate.setFullYear(date.getFullYear())\n        newDate.setMonth(date.getMonth() + 1)\n    } else {\n        newDate.setMonth(0)\n        newDate.setFullYear(date.getFullYear() + 1)\n    }\n    return newDate\n}\n\nconst monthsIndex = {\n    0: 'January',\n    1: 'February',\n    2: 'March',\n    3: 'April',\n    4: 'May',\n    5: 'June',\n    6: 'July',\n    7: 'August',\n    8: 'September',\n    9: 'October',\n    10: 'November',\n    11: 'December'\n}\n\nconst days = ['Su', 'M', 'Tu', 'W', 'Th', 'F', 'Sa']\n\nfunction getDaysInMonth(month, year) {\n    var date = new Date(year, month, 1);\n    var days = [];\n    while (date.getMonth() === month) {\n        const d = new Date(date)\n        d.setHours(12, 0, 0, 0)\n        days.push(d);\n        date.setDate(date.getDate() + 1);\n    }\n    return days;\n}\n\nconst isYearChange = (o, n) => {\n    const thresholdUp = new Date(o)\n    thresholdUp.setMonth(o.getMonth() + 6)\n    const thresholdDown = new Date(o)\n    thresholdDown.setMonth(o.getMonth() - 6)\n    const direction = n < o ? 'right' : 'left'\n\n    return (n > thresholdUp && direction === 'left') || (n < thresholdDown && direction === 'right')\n}\n\nconst month = {\n    onbeforeremove({ dom, state, attrs: { month, id } }) {\n        if (!isYearChange(state.initialDate, month())){\n            const direction = month() < state.initialDate ? 'right' : 'left'\n            dom.classList.add('out-' + direction)\n            dom.parentElement.classList.add('in-' + direction)\n            return new Promise(resolve => {\n                setTimeout(() => {\n                    dom.parentElement.classList.remove('in-' + direction)\n                    resolve()\n                }, 300)\n            })\n        }\n    },\n    oninit({ state, attrs: { month, id } }) {\n        state.initialDate = month()\n        state.days = getDaysInMonth(month().getMonth(), month().getFullYear())\n        state.startDay = state.days[0].getDay()\n        state.empties = new Array(state.startDay).fill(0)\n        state.id = id\n    },\n    view({ state, attrs: { month, id, firstDate, secondDate } }) {\n        return m(`.month.month-${id}`, [\n            m('h5', monthsIndex[month().getMonth()]),\n            m('.month-grid', [\n                m('.days', days.map(d => {\n                    return m('.day', d)\n                })),\n                m('.dates', [\n                    state.empties.map(() => {\n                        return m('.empty-date')\n                    }),\n                    state.days.map(d => {\n                        return m(date, {\n                            date: d,\n                            firstDate,\n                            secondDate\n                        })\n                    })\n                ])\n            ])\n        ])\n    }\n}\n\nconst setDateClassName = (date, firstDate, secondDate) => {\n    if (date && firstDate() && !secondDate()) {\n        if (firstDate().getTime() == date.getTime() && !secondDate()) {\n            return 'initial-date'\n        }\n    } else if (date && firstDate() && secondDate()) {\n        if (firstDate().getTime() == date.getTime()) {\n            return 'first-date'\n        } else if (secondDate().getTime() == date.getTime()) {\n            return 'second-date'\n        } else if (date < secondDate() && date > firstDate()) {\n            return 'in-between'\n        }\n    }\n}\n\nconst date = {\n    view({ attrs: { date, firstDate, secondDate } }) {\n        return m('.date', {\n            class: setDateClassName(date, firstDate, secondDate),\n            onclick() {\n                if (!firstDate()) {\n                    firstDate(date)\n                } else if (firstDate() && !secondDate()) {\n                    secondDate(date)\n                    const first = firstDate()\n                    const second = secondDate()\n\n                    if (second.getTime() < first.getTime()) {\n                        firstDate(second)\n                        secondDate(first)\n                    }\n                } else if (firstDate() && secondDate()) {\n                    secondDate(null)\n                    firstDate(date)\n                }\n            }\n        }, [\n                m('.shape'),\n                m('.bg'),\n                m('.number', date.getDate())\n            ])\n    }\n}\n\nconst year = {\n    view({ attrs: { date } }) {\n        return m('.year-container', [\n            m('button.year-previous', {\n                onclick() {\n                    const d = new Date(date())\n                    d.setFullYear(date().getFullYear() - 1)\n                    date(d)\n                }\n            }, 'Prev'),\n            m('.year', date().getFullYear()),\n            m('button.year-next', {\n                onclick() {\n                    const d = new Date(date())\n                    d.setFullYear(date().getFullYear() + 1)\n                    date(d)\n                }\n            }, 'Next'),\n        ])\n    }\n}\n\nexport default {\n    onremove({ state }) {\n        document.removeEventListener('click', state.close)\n    },\n    oninit({ state, attrs: { data, arrivalProp, departureProp } }) {\n        state.show = stream(false)\n\n        state.toggle = (e) => {\n            if (document.activeElement.classList.contains('date-range-input') && !state.show()) {\n                state.show(!state.show())\n                m.redraw()\n            }\n        }\n\n        state.close = () => {\n            state.show(false)\n            m.redraw()\n        }\n\n        document.addEventListener('click', state.close)\n\n        const date = new Date()\n        state.monthOne = stream(date)\n        state.monthTwo = state.monthOne.map(() => {\n            return nextMonth(state.monthOne())\n        })\n\n        state.months = state.monthTwo.map(() => {\n            return [\n                {\n                    month: state.monthOne,\n                    id: '1',\n                    key: state.monthOne().getTime(),\n                },\n                {\n                    month: state.monthTwo,\n                    id: '2',\n                    key: state.monthTwo().getTime(),\n                }\n            ]\n        })\n\n        state.firstDate = stream()\n        state.secondDate = stream()\n\n        state.secondDate.map(val => {\n            if (val) {\n                data[arrivalProp] = state.firstDate()\n                data[departureProp] = state.secondDate()\n            } else {\n                data[arrivalProp] = null\n                data[departureProp] = null\n            }\n        })\n    },\n    view({ state: { monthOne, monthTwo, months, show, toggle, movement, firstDate, secondDate }, attrs: { placeholder } }) {\n        return m('.date-range', {\n            onclick: e => e.stopPropagation()\n        }, [\n                m('input.date-range-input', {\n                    class: show() ? 'focus' : '',\n                    placeholder,\n                    onclick: toggle,\n                    onfocus: toggle\n                }),\n                //show() &&\n                m('.calendar-display', {\n                    onbeforeremove({ dom }) {\n                        dom.classList.add(\"fade-out\")\n                        return new Promise(resolve => {\n                            setTimeout(resolve, 200)\n                        })\n                    }\n                }, [\n                        m('.triangle'),\n                        m('button.previous-month.month-navigation', {\n                            onclick() {\n                                monthOne(prevMonth(monthOne()))\n                            }\n                        }, 'Prev'),\n\n                        m('button.next-month.month-navigation', {\n                            onclick() {\n                                monthOne(nextMonth(monthOne()))\n                            }\n                        }, 'Next'),\n\n                        m(year, {\n                            date: monthOne\n                        }),\n\n                        m('.months-container', months().map(mon => {\n                            return m(month, {\n                                month: mon.month,\n                                id: mon.id,\n                                key: mon.key,\n                                firstDate,\n                                secondDate\n                            })\n                        }))\n                    ])\n            ])\n    }\n}","import m from 'mithril'\nimport './demo.css'\nimport dateRange from '../lib/date-range-picker'\n\nconst trip = {\n    location: 'Hull',\n    arrivalDate: null,\n    departureDate: null\n}\n\nconst demo = {\n    view(vnode) {\n       return m('.page-date-range', [\n           m(dateRange, {\n               placeholder: 'Arrival/Departure',\n               data: trip,\n               arrivalProp: 'arrivalDate',\n               departureProp: 'departureDate'\n           }),\n           m('.json', JSON.stringify(trip))\n       ])\n    }\n}\n\nm.mount(document.body, demo)\n\n"],"sourceRoot":""}